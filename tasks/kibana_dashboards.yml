---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Guessing current kibana version
  shell: cat package.json | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["version"];'
  args:
    chdir: "/opt/kibana/"
  register: kibana_version
  tags:
    - kibana-dashboards

- name: Finding out the number of shards in ES
  shell: curl -s http://{{ elasticsearch_vip }}:{{ elasticsearch_http_port}}/_settings/|python -c 'import json,sys;obj=json.load(sys.stdin);print obj[".kibana"]["settings"]["index"]["number_of_shards"];'
  register: es_shards_number
  tags:
    - kibana-dashboards

- name: Finding out the number of replicas in ES
  shell: curl -s http://{{ elasticsearch_vip }}:{{ elasticsearch_http_port}}/_settings/|python -c 'import json,sys;obj=json.load(sys.stdin);print obj[".kibana"]["settings"]["index"]["number_of_replicas"];'
  register: es_replicas_number
  tags:
    - kibana-dashboards

- name: Create Kibana templates
  template: src="{{ item.what }}" dest="{{ item.where }}"
  with_items:
    - what: "es_template_kibana4.json.j2"
      where: "/tmp/elasticsearch-template-kibana4.json"
    - what: "es_template_log.json.j2"
      where: "/tmp/elasticsearch-template-log.json"
    - what: "es_template_notification.json.j2"
      where: "/tmp/elasticsearch-template-notification.json"
  tags:
    - kibana-dashboards

- name: Upload Kibana templates
  shell: curl -sL -XPUT "http://{{ elasticsearch_vip }}:{{ elasticsearch_http_port}}/_template/{{ item.where }}" -d @"{{ item.what }}" -o /dev/null
  with_items:
    - what: "/usr/share/elasticsearch/templates/elasticsearch-template-kibana4.json"
      where: "kibana4"
    - what: "/usr/share/elasticsearch/templates/elasticsearch-template-log.json"
      where: "log"
    - what: "/usr/share/elasticsearch/templates/elasticsearch-template-notification.json"
      where: "notification"
  tags:
    - kibana-dashboards

- name: Uploading Log configuration files
  uri:
    method: "PUT"
    url: "http://{{ elasticsearch_vip }}:{{ elasticsearch_http_port}}/log"
    body: " {{ lookup('file', item) }}"
    body_format: "json"
    status_code: 200,201,400
  with_fileglob:
    - "index-pattern/index-pattern_logs.json"
  tags:
    - kibana-dashboards

- name: Uploading Notifications configuration files
  uri:
    method: "PUT"
    url: "http://{{ elasticsearch_vip }}:{{ elasticsearch_http_port}}/notification"
    body: " {{ lookup('file', item) }}"
    body_format: "json"
    status_code: 200,201,400
  with_fileglob:
    - "index-pattern/index-pattern_notifications.json"
  tags:
    - kibana-dashboards

- name: Uploading config JSON configuration file
  uri:
    method: "PUT"
    url: "{{ kibana_index_on_elasticsearch }}/{{ kibana_version.stdout }}/{{ (item | basename ).split('.')[0] }}"
    # NOTE(sigmavirus24): There's a bug in Ansible < 2.1.x where without the
    # leading ' ' this will be interpreted as a dictionary (EVEN WITH to_json)
    # and so the only way to unbreak this is to use a leading ' '. ಠ_ಠ
    body: " {{ lookup('file', item) }}"
    body_format: "json"
    status_code: 200,201
  with_fileglob:
    - "config.json"
  tags:
    - kibana-dashboards
- name: Uploading JSON configuration files
  uri:
    method: "PUT"
    url: "{{ kibana_index_on_elasticsearch }}/{{ (item | dirname).split('/')[-1] }}/{{ (item | basename ).split('.')[0] }}"
    # NOTE(sigmavirus24): There's a bug in Ansible < 2.1.x where without the
    # leading ' ' this will be interpreted as a dictionary (EVEN WITH to_json)
    # and so the only way to unbreak this is to use a leading ' '. ಠ_ಠ
    body: " {{ lookup('file', item) }}"
    body_format: "json"
    status_code: 200,201
  with_fileglob:
    - "search/*.json"
    - "visualization/*.json"
    - "dashboard/*.json"
  tags:
    - kibana-dashboards
